/*
 * This file contains a project skeleton. It is part of the
 * TaskJuggler project management tool. You can use this as a basis to
 * start you own project file.
 */
project your_project_id "Project 1"  2018-09-17-0:00--0500 +4m {
  # Set the default time zone for the project. If not specified, UTC
  # is used.
  timezone "Europe/Zurich"
  # Hide the clock time. Only show the date.
  timeformat "%d.%m.%Y"
  # Use US format for numbers
  numberformat "-" "" "," "." 1
  # Use US financial format for currency values. Don't show cents.
  currencyformat "(" ")" "," "." 0
  # Pick a day during the project that will be reported as 'today' in
  # the project reports. If not specified, the current day will be
  # used, but this will likely be outside of the project range, so it
  # can't be seen in the reports.
  now 2018-09-16
  # The currency for all money values is the Euro.
  currency "CHF"

  # You can define multiple scenarios here if you need them.
  #scenario plan "Plan" {
  #  scenario actual "Actual"
  #}

  # You can define your own attributes for tasks and resources. This
  # is handy to capture additional information about the project that
  # is not directly impacting the project schedule but you like to
  # keep in one place.
  #extend task {
  #  reference spec "Link to Wiki page"
  #}
  #extend resource {
  #  text Phone "Phone"
  #}
}

# If you have any text block that you need multiple times to describe
# your project, you should define a macro for it. Macros can even have
# variable segments that you can set upon calling the macro.
#
# macro Task [
#   task "A ${1} task" {
#   }
# ]
#
# Can be called as
# ${Task "big"}
# to generate
# task "A big task" {
# }

# You can attach flags to accounts, resources and tasks. These can be
# used to filter out subsets of them during reporting.
flags important, hidden

# If you want to do budget planning for you project, you need to
# define some accounts.
#account cost "Project Cost" {
#  account dev "Development"
#  account doc "Documentation"
#}
#account rev "Customer Payments"

# The Profit&Loss analysis should be rev - cost accounts.
#balance cost rev

# Define you public holidays here.
#vacation "New Year's Day" 2012-01-02
#vacation "Birthday of Martin Luther King, Jr." 2012-01-16
#vacation "Washington's Birthday" 2012-02-20
#vacation "Memorial Day" 2012-05-28
#vacation "Independence Day" 2012-07-04
#vacation "Labor Day" 2012-09-03
#vacation "Columbus Day" 2012-10-08
#vacation "Veterans Day" 2012-11-12
#vacation "Thanksgiving Day" 2012-11-22
#vacation "Christmas Day" 2012-12-25

# The daily default rate of all resources. This can be overridden for each
# resource. We specify this, so that we can do a good calculation of
# the costs of the project.
# rate 400.0

# This is a set of example resources.
resource se "Stefan Eichenberger" {
#    limits { weeklymax 1d }
    workinghours mon 8:00 - 12:00, 13:00 - 18:00
    workinghours tue 8:00 - 12:00, 13:00 - 18:00
    workinghours wed - sun off
}

# This is a resource that does not do any work.
#resource s1 "System 1" {
#  efficiency 0.0
#  rate 600.0
#}

task project "Project 2" {
  task wp1 "Concept" {
    allocate se
    task t1 "Search and order hardware" {
        length 5d
        limits { maximum 2d }
    }
    task t2 "Standard ORB Slam on PC" {
        depends !t1
        length 5d
        limits { maximum 2d }
    }
    task t3 "Standard ORB Slam on iMX8" {
        depends !t2
        length 10d
        limits { maximum 4d }
    }
    task t4 "Integrate Econ Camera" {
        depends !t3
        length 10d
        limits { maximum 4d }
    }
    task "Optimization done" {
        depends !t4
        milestone
    }
  }
  task wp2 "Optimization" {
    depends !wp1
    allocate se
    task t1 "Use OpenCV ORB" {
        length 5d
        limits { maximum 2d }
    }
    task t2 "Analyze bottlenecks" {
        depends !t1
        length 15d
        limits { maximum 6d }
    }
    task "Optimization done" {
        depends !t2
        milestone
    }
  }
  task wp3 "Implementation" {
    depends !wp2
    allocate se
    task t1 "Create Dense Cloud" {
        length 10d
        limits { maximum 4d }
    }
    task t2 "Show Dense Cloud" {
        depends !t1
        length 10d
        limits { maximum 4d }
    }
    task "Implementation done" {
        depends !t2
        milestone
    }
  }

  task wp4 "Documentation" {
    allocate se
    depends !wp3
    task t1 "Documentation" {
        limits { weeklymax 2d }
        length 10d
    }
    task t2 "Presentation" {
        depends !t1
        limits { weeklymax 1d }
        length 5d
    }
  }
  task pm "Project management" {
    length 85d
  }
}

# Now the project has been specified completely. Stopping here would
# result in a valid TaskJuggler file that could be processed and
# scheduled. But no reports would be generated to visualize the
# results.

navigator navbar {
  hidereport 0
}

macro TaskTip [
  tooltip istask() -8<-
    '''Start: ''' <-query attribute='start'->
    '''End: ''' <-query attribute='end'->
    ----
    '''Resources:'''

    <-query attribute='allocate'->
    ----
    '''Precursors: '''

    <-query attribute='precursors'->
    ----
    '''Followers: '''

    <-query attribute='followers'->
    ->8-
]

textreport frame "" {
  header -8<-
    == TaskJuggler Project Template ==
    <[navigator id="navbar"]>
  ->8-
  footer "----"
  textreport index "Overview" {
    formats html
    center '<[report id="overview"]>'
  }


  textreport "Status" {
    formats html
    center -8<-
      <[report id="status.dashboard"]>
      ----
      <[report id="status.completed"]>
      ----
      <[report id="status.ongoing"]>
      ----
      <[report id="status.future"]>
    ->8-
  }

  textreport wps "Work packages" {
    textreport wp1 "Work package 1 - Concept" {
      formats html
      center '<[report id="wp1"]>'
    }

    textreport wp2 "Work package 2 - Optimization" {
      formats html
      center '<[report id="wp2"]>'
    }

    textreport wp3 "Work package 3 - Implementation" {
      formats html
      center '<[report id="wp3"]>'
    }
    textreport wp4 "Work package 3 - Documentation" {
      formats html
      center '<[report id="wp3"]>'
    }

  }

  textreport "ContactList" {
    formats html
    title "Contact List"
    center '<[report id="contactList"]>'
  }
  textreport "ResourceGraph" {
    formats html
    title "Resource Graph"
    center '<[report id="resourceGraph"]>'
  }
}

# A traditional Gantt chart with a project overview.
taskreport overview "" {
  header -8<-
    === Project Overview ===

    The project is structured into 3 work packages.

    # <-reportlink id='frame.wps.wp1'->
    # <-reportlink id='frame.wps.wp2'->
    # <-reportlink id='frame.wps.wp3'->

    === Original Project Plan ===
  ->8-
#  columns bsi { title 'WBS' },
#          name, start, end, effort, cost,
#          revenue, chart { ${TaskTip} }
  columns bsi { title 'WBS' }, name, start, end, chart { ${TaskTip} scale week }
  sortresources tree 
  sorttasks tree
  # For this report we like to have the abbreviated weekday in front
  # of the date. %a is the tag for this.
  timeformat "%a %Y-%m-%d"
  loadunit days
  hideresource 1
  caption 'All effort values are in man days.'

  # Some text if required
  footer -8<-
  ->8-
}

# Macro to set the background color of a cell according to the alert
# level of the task.
macro AlertColor [
  cellcolor plan.alert = 0 "#00D000" # green
  cellcolor plan.alert = 1 "#D0D000" # yellow
  cellcolor plan.alert = 2 "#D00000" # red
]

taskreport status "" {
  columns bsi { width 50 title 'WBS' }, name { width 150 },
          start { width 100 }, end { width 100 },
          effort { width 100 },
          alert { tooltip plan.journal
                          != '' "<-query attribute='journal'->" width 150 },
          status { width 150 }

  taskreport dashboard "" {
    headline "Project Dashboard (<-query attribute='now'->)"
    columns name { title "Task" ${AlertColor} width 200},
            resources { width 200 ${AlertColor}
                        listtype bullets
                        listitem "<-query attribute='name'->"
                        start ${projectstart} end ${projectend} },
            alerttrend { title "Trend" ${AlertColor} width 50 },
            journal { width 350 ${AlertColor} }
    journalmode status_up
    journalattributes headline, author, date, summary, details
    hidetask ~hasalert(0)
    sorttasks alert.down, plan.end.up
    period %{${now} - 1w} +1w
  }
  taskreport completed "" {
    headline "Already completed tasks"
    hidetask ~(plan.end <= ${now})
  }
  taskreport ongoing "" {
    headline "Ongoing tasks"
    hidetask ~((plan.start <= ${now}) & (plan.end > ${now}))
  }
  taskreport future "" {
    headline "Future tasks"
    hidetask ~(plan.start > ${now})
  }
}

# A list of tasks showing the resources assigned to each task.
taskreport wp1 "" {
  headline "Work package 1 - Concept"
  columns bsi { title 'WBS' }, name, start, end, effort { title "Work" },
          duration, chart { ${TaskTip} scale day width 500 }
  timeformat "%Y-%m-%d"
  hideresource ~(isleaf() & isleaf_())
  sortresources name.up
  taskroot project.wp1
}
# A list of tasks showing the resources assigned to each task.
taskreport wp2 "" {
  headline "Work package 2 - Optimization"
  columns bsi { title 'WBS' }, name, start, end, effort { title "Work" },
          duration, chart { ${TaskTip} scale day width 500 }
  timeformat "%Y-%m-%d"
  hideresource ~(isleaf() & isleaf_())
  sortresources name.up
  taskroot project.wp2
}

# A list of all tasks with the percentage completed for each task
taskreport wp3 "" {
  headline "Work package 3 - Implementation"
  columns bsi { title 'WBS' }, name, start, end, effort { title "Work" },
          duration, chart { ${TaskTip} scale day width 500 }
  timeformat "%Y-%m-%d"
  hideresource ~(isleaf() & isleaf_())
  sortresources name.up
  taskroot project.wp3
}

# A list of all tasks with the percentage completed for each task
taskreport wp4 "" {
  headline "Work package 4 - Documentation"
  columns bsi { title 'WBS' }, name, start, end, effort { title "Work" },
          duration, chart { ${TaskTip} scale day width 500 }
  timeformat "%Y-%m-%d"
  hideresource ~(isleaf() & isleaf_())
  sortresources name.up
  taskroot project.wp4
}
# A list of all employees with their contact details.
resourcereport contactList "" {
  headline "Contact list and duty plan"
  columns name,
          email { celltext 1 "[mailto:<-email-> <-email->]" },
          managers { title "Manager" },
          chart { scale day }
  hideresource ~isleaf()
  sortresources name.up
  hidetask 1
}

# A graph showing resource allocation. It identifies whether each
# resource is under- or over-allocated for.
resourcereport resourceGraph "" {
  headline "Resource Allocation Graph"
  columns no, name, effort, rate, weekly { ${TaskTip} width 800 }
  loadunit shortauto
  # We only like to show leaf tasks for leaf resources.
  hidetask ~(isleaf() & isleaf_())
  sorttasks plan.start.up
}

